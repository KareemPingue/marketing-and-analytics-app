name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies and run tests (Backend)
        working-directory: ./backend
        run: |
          npm install
          npm test

      - name: Install dependencies and run tests (Frontend)
        working-directory: ./frontend
        run: |
          npm install
          npm test

  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          GCP_KEYFILE: ${{ secrets.GCP_KEYFILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, terraform]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Backend
        working-directory: ./backend
        run: |
          npm install
          node src/app.js

      - name: Deploy Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm start
